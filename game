<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Doodle Jump Clone</title>
  <style>
    * { margin: 0; padding: 0; box-sizing: border-box; }
    canvas { background: #fef9f4; display: block; margin: 0 auto; }
    #scoreboard {
      text-align: center;
      font-family: 'Segoe UI', sans-serif;
      font-size: 1.2rem;
      margin: 1rem;
      color: #444;
    }
  </style>
</head>
<body>
  <div id="scoreboard">Score: <span id="score">0</span></div>
  <canvas id="gameCanvas" width="400" height="600"></canvas>
  <script>
    const canvas = document.getElementById('gameCanvas');
    const ctx = canvas.getContext('2d');
    const scoreDisplay = document.getElementById('score');

    const bearEmoji = "üêª"; // üêª

    const player = {
      x: 180,
      y: 500,
      width: 30,
      height: 30,
      velocityY: 0,
      gravity: 0.4,
      jumpStrength: -10
    };

    let score = 0;
    let platforms = [];
    const platformCount = 7;

    for (let i = 0; i < platformCount; i++) {
      platforms.push({
        x: Math.random() * 350,
        y: i * 90,
        width: 80,
        height: 10
      });
    }

    function drawPlayer() {
      ctx.font = "28px Arial";
      ctx.fillText(bearEmoji, player.x, player.y);
    }

    function drawPlatforms() {
      ctx.fillStyle = '#333';
      platforms.forEach(p => ctx.fillRect(p.x, p.y, p.width, p.height));
    }

    function gameLoop() {
      ctx.clearRect(0, 0, canvas.width, canvas.height);

      player.velocityY += player.gravity;
      player.y += player.velocityY;

      if (player.y > canvas.height) {
        player.y = 500;
        player.velocityY = 0;
        score = 0; // reset score on fall
      }

      platforms.forEach(p => {
        if (
          player.x < p.x + p.width &&
          player.x + player.width > p.x &&
          player.y + player.height < p.y + p.height &&
          player.y + player.height + player.velocityY >= p.y
        ) {
          player.velocityY = player.jumpStrength;
          score += 10;
          scoreDisplay.textContent = score;
        }
      });

      platforms.forEach(p => {
        p.y -= 1;
        if (p.y < 0) {
          p.y = canvas.height;
          p.x = Math.random() * 350;
        }
      });

      drawPlayer();
      drawPlatforms();

      requestAnimationFrame(gameLoop);
    }

    document.addEventListener('keydown', e => {
      if (e.key === 'ArrowLeft') player.x -= 20;
      if (e.key === 'ArrowRight') player.x += 20;
    });

    gameLoop();
  </script>
</body>
</html>
